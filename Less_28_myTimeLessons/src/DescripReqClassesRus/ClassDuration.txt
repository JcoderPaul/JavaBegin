******* Class Duration - Класс Duration *******

public final class Duration extends Object
                            implements TemporalAmount,
                                       Comparable<Duration>,
                                       Serializable



Класс Duration моделирует количество или сумму времени в секундах и наносекундах.
Количество времени, основанное на времени, например «34,5 секунды». Доступ к классу
можно получить, используя другие единицы измерения длительности, такие как минуты и
часы, единица ДНИ может быть использована и считается точно равной 24
часам, таким образом игнорируя эффект перехода на летнее время.
------------------------------------------------------------------------------------
См. Period для основанного на дате эквивалента этого класса.
https://docs.oracle.com/javase/8/docs/api/java/time/Period.html
------------------------------------------------------------------------------------

Физическая длительность может быть бесконечной. Для удобства продолжительность хранится
с ограничениями, аналогичными Instant. Продолжительность использует наносекундное
разрешение с максимальным значением секунд, которое может быть удержано в long.
Это больше, чем текущий предполагаемый возраст Вселенной.

Диапазон длительности требует хранения числа большего, чем long. Для этого класс хранит
значение long, представляющее секунды, и int, представляющее наносекунду секунды, которая
всегда будет находиться в диапазоне от 0 до 999 999 999. Модель имеет направленную
продолжительность, что означает, что продолжительность может быть отрицательной.

Продолжительность измеряется в «секундах», но они не обязательно идентичны научному
определению «секунды SI», основанному на атомных часах. Эта разница влияет только на
длительность, измеренную около секунды координации, и не должна влиять на большинство
приложений.
-----------------------------------------------------------------------------------------
См. Instant для обсуждения значения секунды и шкалы времени.
https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html
-----------------------------------------------------------------------------------------

Объекты класса Duration следует сравнивать только используя метод equals.
Этот класс является неизменяемым и потокобезопасным.

- Duration abs() - Возвращает копию этой длительности с положительной длиной.

- Temporal addTo(Temporal temporal) - Добавляет эту длительность к указанному
  временному объекту.

- static Duration between(Temporal startInclusive, Temporal endExclusive) -
  Получает Duration, представляющую продолжительность между двумя временными
  объектами.

- int compareTo(Duration otherDuration) - Сравнивает эту длительность с указанной
  длительностью.

- Duration dividedBy(long divisor) - Возвращает копию этой длительности, деленную
  на указанное значение.

- boolean equals(Object otherDuration) - Проверяет, равна ли эта длительность
  указанной продолжительности.

- static Duration from(TemporalAmount amount) - Получает экземпляр Duration из
  временной суммы.

- long get(TemporalUnit unit) - Получает значение запрошенной единицы.

- int getNano() - Получает количество наносекунд в пределах секунды в этой
  продолжительности.

- long getSeconds() - Получает количество секунд в этой длительности.

- List<TemporalUnit> getUnits() - Получает набор единиц, поддерживаемых этой
  длительностью.

- int hashCode() - Хэш-код для этой продолжительности.

- boolean isNegative() - Проверяет, является ли эта продолжительность
  отрицательной, исключая ноль.

- boolean isZero() - Проверяет, является ли эта длительность нулевой.

- Duration minus(Duration duration) - Возвращает копию этой длительности с
  вычитанием указанной длительности.

- Duration minus(long amountToSubtract, TemporalUnit unit) - Возвращает копию
  этой длительности с вычитанием указанной длительности.

- Duration minusDays(long daysToSubtract) - Возвращает копию этой
  продолжительности с вычитанием указанной продолжительности в стандартных
  24-часовых днях.

- Duration minusHours(long hoursToSubtract) - Возвращает копию этой длительности
  с вычетом указанной длительности в часах.

- Duration minusMillis(long millisToSubtract) - Возвращает копию этой длительности
  с вычитанием указанной длительности в миллисекундах.

- Duration minusMinutes(long minutesToSubtract) - Возвращает копию этой длительности
  с вычитанием указанной длительности в минутах.

- Duration minusNanos(long nanosToSubtract) - Возвращает копию этой длительности
  с вычитанием указанной длительности в наносекундах.

- Duration minusSeconds(long secondsToSubtract) - Возвращает копию этой длительности
  с вычитанием указанной длительности в секундах.

- Duration multipliedBy(long multiplicand) - Возвращает копию этой длительности,
  умноженную на скаляр.

- Duration negated() - Возвращает копию этой длительности с инвертированной длиной.

- static Duration of(long amount, TemporalUnit unit) - Получает Duration,
  представляющую сумму в указанной единице.

- static Duration ofDays(long days) - Получает значение Duration,
  представляющее количество стандартных 24-часовых дней.

- static Duration ofHours(long hours) - Получает значение Duration,
  представляющее количество стандартных часов.

- static Duration ofMillis(long millis) - Получает Duration,
  представляющую количество миллисекунд.

- static Duration ofMinutes(long minutes) - Получает значение Duration,
  представляющее количество стандартных минут.

- static Duration ofNanos(long nanos) - Получает Duration,
  представляющую количество наносекунд.

- static Duration ofSeconds(long seconds) - Получает Duration,
  представляющую количество секунд.

- static Duration ofSeconds(long seconds, long nanoAdjustment) - Получает
  значение Duration, представляющее количество секунд, и корректировку
  в наносекундах.

- static Duration parse(CharSequence text) - Получает длительность из
  текстовой строки, такой как PnDTnHnMn.nS.

- Duration plus(Duration duration) - Возвращает копию этой длительности с
  добавленной указанной длительностью.

- Duration plus(long amountToAdd, TemporalUnit unit) - Возвращает копию
  этой длительности с добавленной указанной длительностью.

- Duration plusDays(long daysToAdd) - Возвращает копию этой длительности
  с указанной продолжительностью в стандартных 24-часовых днях.

- Duration plusHours(long hoursToAdd) - Возвращает копию этой длительности
  с добавленной продолжительностью в часах.

- Duration plusMillis(long millisToAdd) - Возвращает копию этой длительности
  с добавлением указанной длительности в миллисекундах.

- Duration plusMinutes(long minutesToAdd) - Возвращает копию этой длительности
  с указанной продолжительностью в добавленных минутах.

- Duration plusNanos(long nanosToAdd) - Возвращает копию этой длительности
  с добавленной указанной продолжительностью в наносекундах.

- Duration plusSeconds(long secondsToAdd) - Возвращает копию этой длительности
  с добавленной указанной продолжительностью в секундах.

- Temporal subtractFrom(Temporal temporal) - Вычитает эту продолжительность
  из указанного временного объекта.

- long toDays() - Получает количество дней в этой продолжительности.

- long toHours() - Получает количество часов в этой продолжительности.

- long toMillis() - Преобразует эту длительность в общую длину в миллисекундах.

- long toMinutes() - Получает количество минут в этой продолжительности.

- long toNanos() - Преобразует эту продолжительность в общую длину в наносекундах,
  выраженную как long.

- String toString() - Строковое представление этой продолжительности с
  использованием представления на основе секунд ISO-8601,
  например PT8H6M12.345S.

- Duration withNanos(int nanoOfSecond) - Возвращает копию этой длительности
  с указанной наносекундой.

- Duration withSeconds(long seconds) - Возвращает копию этой длительности
  с указанным количеством секунд.

----------------------------------------------------------------------------------------------
Более подробно см. https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html
----------------------------------------------------------------------------------------------
