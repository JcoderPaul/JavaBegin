package Less_10_myStringMethod;

public class Less_10_Part_5_StrMeth_2 {
    public static void main(String[] args) {
        String str_1 = " Привет большой ветреный мир! "; // Обратите внимание по краям есть пробелы
        System.out.println("Длина строки с пробелами ->" + str_1.length());
        System.out.println("-------------------------------------------------------------------");
        /*
        Структура индексов следующая:
        _ П р и в е т _ б о л  ь  ш  о  й  _  в  е  т  р  е  н  ы  й  _  м  и  р  !  _
        0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
        */
        int startIndex = 8; // Задаем индекс начала подстроки
        /*
        Создаем строку(подстроку) из первоначальной, начиная с индекса startIndex
        Естественно первоначальная строка никак не изменилась он ИММУТАБЕЛЬНА - неизменяема.,
        как собственно и полученная методом *.substring(), при выводе на печать это видно.
        */
        String str_2 = str_1.substring(startIndex);
        System.out.println("Результат работы метода .substring(index_1) -> '" + str_2 +
                           "' \nначиная с " + startIndex + "-го индекса основной строки -> '" + str_1 + "'");
        System.out.println("-------------------------------------------------------------------");

        int finishIndex = 17;
        /*
        !!! Нужно обратить внимание, что индекс 17 принадлежит символу 'е', но сам он
        не попал в выборку и не был выведен в консоль, т.е. еще раз
        !!! Символ индекса в подстроку не попадает!!!
        */
        String str_3 = str_1.substring(startIndex,finishIndex);
        System.out.println("Результат работы метода .substring(index_1, index_2) -> '" + str_3 +
                           "' \nначиная с " + startIndex + "-го индекса по " + finishIndex +
                           "-й индекс основной строки -> '" + str_1 + "'");
        System.out.println("-------------------------------------------------------------------");
        int startIndex_2 = 25;
        int magicFinishIndex = 30;
        /*
        !!! Нужно обратить внимание, что индекса 30 просто нет, но поскольку сам он
        не попадет в выборку, то не сработает и исключение (out of ...), т.е. еще раз
        !!! Символ индекса в подстроку не попадает!!!
        */
        String str_4 = str_1.substring(startIndex_2,magicFinishIndex);
        System.out.println("Результат работы метода .substring(index_1, index_2) -> '" + str_4 +
                "' \nначиная с " + startIndex_2 + "-го индекса по " + magicFinishIndex +
                "-й индекс основной строки -> '" + str_1 + "'");

        // УДАЛЯЕМ ЛИШНИЕ ПРОБЕЛЫ ПО КРАЯМ СТРОКИ, ВНУТРИ СТРОКИ ПРОБЕЛЫ ОСТАЮТСЯ НЕ ТРОНУТЫМИ
        System.out.println("-------------------------------------------------------------------");
        System.out.println("Исходная строка '" + str_1 + "' имеет длину -> " + str_1.length());
        System.out.println("Строка после работы метода *.trim() имеет вид '" + str_1.trim() +
                           "' и длину -> " + str_1.trim().length());

    }
}
