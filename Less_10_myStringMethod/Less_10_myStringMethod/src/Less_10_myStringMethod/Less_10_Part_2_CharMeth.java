package Less_10_myStringMethod;

public class Less_10_Part_2_CharMeth {
    public static void main(String[] args) {
        String str_1 = " Привет мир! "; // Итого 13 символов
        // Замеряем длину строку в символах, пробел тоже символ.
        System.out.println("-------------------------------------------------------------------");
        System.out.println("В строке -> " + str_1.length());
        System.out.println("-------------------------------------------------------------------");

        // Задаем номер искомого символа и ПОМНИМ, что отсчет жертв идет с нуля!
        int place = 4; // Более 13 символов, для текущего примера выкинет исключение!
        // Извлекаем символ из нашей стоки, строка осталась неизменной
        char myChar = str_1.charAt(place);
        // Получили результат
        System.out.println("В нашей строке на " + place + "-м месте стоит символ '" + myChar + "'");
        System.out.println("-------------------------------------------------------------------");

        // Задаем искомый символ
        char findChar = 'м';
        // Активируем метод позволяющий по символу определить его место в заданной строке
        int findPlace = str_1.indexOf(findChar);
        System.out.println("В нашей строке символ '" + findChar + "' стоит на " + findPlace + "-м месте.");
        System.out.println("-------------------------------------------------------------------");

        // Задаем искомый символ, которого точно нет в нашей строке
        char find_No_Char = 'g';
        // Активируем метод позволяющий по символу определить его место в заданной строке, но символа нет и...
        int find_No_Place = str_1.indexOf(find_No_Char);
        // ... получили результат '-1'
        System.out.println("В нашей строке символ '" + find_No_Char + "' стоит на " + find_No_Place + "-м месте.");
        System.out.println("-------------------------------------------------------------------");

        // Задаем искомый символ, например 'и', их у нас аж 2-е шт.
        // Помним, что метод *.indexOf(), без доп. аргумента ищет первое вхождение искомого символа.
        char findChar_2 = 'и';
        // Задаем индекс символа с какого нужно начать поиск требуемого
        int startFindPlace = 5;
        int startFindPlace_0 = 0;
        // Активируем метод позволяющий по символу определить его место в
        // заданной строке, начиная с определенного индекса в строке.
        int findPlace_2 = str_1.indexOf(findChar_2,startFindPlace);
        int findPlace_0 = str_1.indexOf(findChar_2,startFindPlace_0);
        System.out.println("Начиная с " + startFindPlace_0 + " индекса " +
                           "в нашей строке символ '" + findChar_2 +
                           "' стоит на " + findPlace_0 + "-м месте.");
        System.out.println("Начиная с " + startFindPlace + " индекса " +
                           "в нашей строке символ '" + findChar_2 +
                           "' стоит на " + findPlace_2 + "-м месте.");
        System.out.println("-------------------------------------------------------------------");
        // Результат поиска не существующего символа при использовании *.indexOf(), что с уточняющим
        // аргументом, что без него дадут '-1'
    }
}
